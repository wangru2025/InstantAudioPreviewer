# Byte-compiled / optimized / DLL files
# Python bytecode files
__pycache__/
*.pyc
*.pyo
*.pyd

# C extensions
*.so

# Distribution / packaging
build/
dist/
*.egg-info/
.eggs/
*.egg
wheels/
pip-wheels/
*.egg-link
*.egg-discover

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
cover/

# VS Code settings
.vscode/

# Jupyter Notebook
.ipynb_checkpoints

# SQLite databases (如果你不希望用户获得初始化的db文件，则可以添加)
# *.db
# *.sqlite3

# Temporary files
*.tmp
*.swp
*~

# OS generated files
.DS_Store
Thumbs.db

# Ignore common IDE/editor configuration files
.idea/
.project
.settings/
nbproject/

# --------------- Special handling for DLLs ---------------
# General rule: ignore all DLLs
# But we will explicitly un-ignore the ones we need.

# Ignore all DLL files by default for this rule block.
# If you have other DLLs that should be ignored, they will be ignored too.
# *.dll

# Explicitly UN-IGNORE the DLLs that are part of your distribution:
# Make sure these paths are correct relative to your project root.
# If your DLLs are in a specific folder like 'bin', you might need to adjust:
# !bin/*.dll
# However, if they are at the root, like your example showed:
!SDL2.dll
!SDL2_mixer.dll
!ZDSRAPI_x64.dll
!libgme.dll
!libogg-0.dll
!libopus-0.dll
!libopusfile-0.dll
!libwavpack-1.dll
!libxmp.dll
!nvdaControllerClient.dll

# If you have any Python virtual environment folders, ignore them.
# venv/
# .venv/
# env/

# Log files generated by your application
*.log

# Build artifacts for PyInstaller or similar tools, if you create them
# *.exe
# *.exe.manifest
# *.spec